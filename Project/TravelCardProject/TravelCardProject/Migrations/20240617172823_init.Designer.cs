// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TravelCardProject.Entities;

#nullable disable

namespace TravelCardProject.Migrations
{
    [DbContext(typeof(TravelCardsDbContext))]
    [Migration("20240617172823_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("TravelCardProject.Entities.Account", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal")
                        .HasColumnName("balance");

                    b.HasKey("Id");

                    b.ToTable("accounts", (string)null);
                });

            modelBuilder.Entity("TravelCardProject.Entities.Coefficient", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<int?>("DurationMinutes")
                        .HasColumnType("int")
                        .HasColumnName("duration_minutes");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar")
                        .HasColumnName("name");

                    b.Property<double>("Value")
                        .HasColumnType("decimal")
                        .HasColumnName("value");

                    b.HasKey("Id");

                    b.ToTable("coefficients", (string)null);
                });

            modelBuilder.Entity("TravelCardProject.Entities.Passenger", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("passengers", (string)null);
                });

            modelBuilder.Entity("TravelCardProject.Entities.Tariff", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<int?>("Duration")
                        .HasColumnType("int")
                        .HasColumnName("duration");

                    b.Property<decimal>("GroundTripPrice")
                        .HasColumnType("decimal")
                        .HasColumnName("ground_trip_price");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar")
                        .HasColumnName("name");

                    b.Property<decimal>("UndergroundTripPrice")
                        .HasColumnType("decimal")
                        .HasColumnName("underground_trip_price");

                    b.HasKey("Id");

                    b.ToTable("tariffs", (string)null);
                });

            modelBuilder.Entity("TravelCardProject.Entities.Terminal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("TransportType")
                        .HasColumnType("int")
                        .HasColumnName("transport_type");

                    b.HasKey("Id");

                    b.ToTable("terminals", (string)null);
                });

            modelBuilder.Entity("TravelCardProject.Entities.TravelCard", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("AccountId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("ActivationDate")
                        .HasColumnType("timestamp")
                        .HasColumnName("activation_date");

                    b.Property<DateTime?>("ExpirationDate")
                        .HasColumnType("timestamp")
                        .HasColumnName("expiration_date");

                    b.Property<DateTime?>("HighCoefficientExpiration")
                        .HasColumnType("timestamp")
                        .HasColumnName("high_coefficient_expiration");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("varchar")
                        .HasColumnName("number");

                    b.Property<Guid>("PassengerId")
                        .HasColumnType("uuid");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<Guid>("TariffId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("AccountId")
                        .IsUnique();

                    b.HasIndex("PassengerId");

                    b.HasIndex("TariffId");

                    b.ToTable("travel_cards", (string)null);
                });

            modelBuilder.Entity("TravelCardProject.Entities.Trip", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("TerminalId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("TravelCardId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("TripDate")
                        .HasColumnType("timestamp")
                        .HasColumnName("trip_date");

                    b.HasKey("Id");

                    b.HasIndex("TerminalId");

                    b.HasIndex("TravelCardId");

                    b.ToTable("trips_info", (string)null);
                });

            modelBuilder.Entity("TravelCardProject.Entities.TravelCard", b =>
                {
                    b.HasOne("TravelCardProject.Entities.Account", "Account")
                        .WithOne("TravelCard")
                        .HasForeignKey("TravelCardProject.Entities.TravelCard", "AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TravelCardProject.Entities.Passenger", "Passenger")
                        .WithMany("TravelCards")
                        .HasForeignKey("PassengerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TravelCardProject.Entities.Tariff", "Tariff")
                        .WithMany("TravelCards")
                        .HasForeignKey("TariffId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("Passenger");

                    b.Navigation("Tariff");
                });

            modelBuilder.Entity("TravelCardProject.Entities.Trip", b =>
                {
                    b.HasOne("TravelCardProject.Entities.Terminal", "Terminal")
                        .WithMany("Trips")
                        .HasForeignKey("TerminalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TravelCardProject.Entities.TravelCard", "TravelCard")
                        .WithMany("Trips")
                        .HasForeignKey("TravelCardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Terminal");

                    b.Navigation("TravelCard");
                });

            modelBuilder.Entity("TravelCardProject.Entities.Account", b =>
                {
                    b.Navigation("TravelCard")
                        .IsRequired();
                });

            modelBuilder.Entity("TravelCardProject.Entities.Passenger", b =>
                {
                    b.Navigation("TravelCards");
                });

            modelBuilder.Entity("TravelCardProject.Entities.Tariff", b =>
                {
                    b.Navigation("TravelCards");
                });

            modelBuilder.Entity("TravelCardProject.Entities.Terminal", b =>
                {
                    b.Navigation("Trips");
                });

            modelBuilder.Entity("TravelCardProject.Entities.TravelCard", b =>
                {
                    b.Navigation("Trips");
                });
#pragma warning restore 612, 618
        }
    }
}
