// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ProductItems.Terminal.Models;

#nullable disable

namespace ProductItems.Terminal.Migrations
{
    [DbContext(typeof(ProductItemsDbContext))]
    [Migration("20240604173047_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ProductItems.Terminal.Models.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("categories", (string)null);
                });

            modelBuilder.Entity("ProductItems.Terminal.Models.ProductItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uuid")
                        .HasColumnName("category_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("product_items", (string)null);
                });

            modelBuilder.Entity("ProductItems.Terminal.Models.Property", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("properties", (string)null);
                });

            modelBuilder.Entity("ProductItems.Terminal.Models.PropertyValue", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("ProductItemId")
                        .HasColumnType("uuid")
                        .HasColumnName("product_item_id");

                    b.Property<Guid>("PropertyId")
                        .HasColumnType("uuid")
                        .HasColumnName("property_id");

                    b.Property<string>("Value")
                        .HasMaxLength(3000)
                        .HasColumnType("varchar")
                        .HasColumnName("value");

                    b.HasKey("Id");

                    b.HasIndex("ProductItemId");

                    b.HasIndex("PropertyId");

                    b.ToTable("property_values", (string)null);
                });

            modelBuilder.Entity("ProductItems.Terminal.Models.ProductItem", b =>
                {
                    b.HasOne("ProductItems.Terminal.Models.Category", "Category")
                        .WithMany("ProductItems")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("ProductItems.Terminal.Models.PropertyValue", b =>
                {
                    b.HasOne("ProductItems.Terminal.Models.ProductItem", "ProductItem")
                        .WithMany("Props")
                        .HasForeignKey("ProductItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProductItems.Terminal.Models.Property", "Property")
                        .WithMany("Values")
                        .HasForeignKey("PropertyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductItem");

                    b.Navigation("Property");
                });

            modelBuilder.Entity("ProductItems.Terminal.Models.Category", b =>
                {
                    b.Navigation("ProductItems");
                });

            modelBuilder.Entity("ProductItems.Terminal.Models.ProductItem", b =>
                {
                    b.Navigation("Props");
                });

            modelBuilder.Entity("ProductItems.Terminal.Models.Property", b =>
                {
                    b.Navigation("Values");
                });
#pragma warning restore 612, 618
        }
    }
}
